2007-04-10  Lluis Sanchez Gual <lluis@novell.com> 

	* Mono.Addins.mdp, Makefile.am, Mono.Addins.csproj: Updated.
	* Mono.Addins/Addin.cs: Properly resolve absolute add-in ids (starting
	  with ::).
	* Mono.Addins/AddinRegistry.cs: Added method for reading a manifest.
	* Mono.Addins.Description/Extension.cs: Added GetExtendedObject()
	  method. Initialize the owner of all collections.
	* Mono.Addins.Description/AddinDependency.cs: Added method for getting
	  the full ID of the referenced assembly.
	* Mono.Addins.Description/AddinDescription.cs: Added OwnerDatabase
	  property. Initialize the owner of all collections. Properly check
	  for referenced assemblies in Validate(). 
	* Mono.Addins.Description/ExtensionNodeType.cs: Properly read the
	  objectType attribute from XML. Initialize the owner of all
	  collections.
	* Mono.Addins.Description/ObjectDescriptionCollection.cs: Added
	  constructor which takes the collection owner as parameter. When an
	  element is added, set the parent of the element.
	* Mono.Addins.Description/ExtensionPoint.cs,
	  Mono.Addins.Description/ModuleDescription.cs: Initialize the owner
	  of all collections.
	* Mono.Addins.Description/ExtensionNodeDescription.cs: Added
	  GetNodeType() method and some helper properties. Initialize the
	  owner of all collections.
	* Mono.Addins.Description/NodeTypeAttributeCollection.cs,
	  Mono.Addins.Description/ExtensionCollection.cs,
	  Mono.Addins.Description/DependencyCollection.cs,
	  Mono.Addins.Description/ExtensionNodeDescriptionCollection.cs,
	  Mono.Addins.Description/ExtensionPointCollection.cs,
	  Mono.Addins.Description/ModuleDescriptionCollection.cs,
	  Mono.Addins.Description/ConditionTypeDescriptionCollection.cs,
	  Mono.Addins.Description/ExtensionNodeSetCollection.cs: Added
	  constructor which takes the collection owner as parameter.
	* Mono.Addins.Description/ExtensionNodeSet.cs: Added
	  GetAllowedNodeTypes() method, which returns all allowed nodes,
	  recursivelly looking at referenced node sets. Initialize the owner
	  of all collections.
	* Mono.Addins.Description/ExtensionNodeTypeCollection.cs: New
	  collection.
	* Mono.Addins.Description/ObjectDescription.cs: Added properties for
	  getting the parent of an object, and the add-in description where
	  the object is declared.
	* Mono.Addins.Database/AddinDatabase.cs: Properly reuse generated
	  add-in ids when the add-in file is the same. Added method for
	  finding a node set defined in the registry. Initialize the
	  OwnerDatabase property of every loaded AddinDescription.
	* Mono.Addins.Database/AddinScanner.cs: When looking for add-in types,
	  look in the references too. Set HasUserId to false for add-ins with
	  auto-generated ID.

2007-04-04  Lluis Sanchez Gual <lluis@novell.com> 

	* Mono.Addins/ExtensionContext.cs, Mono.Addins/AddinSessionService.cs,
	  Makefile.am, Mono.Addins.Description/AddinDescription.cs,
	  Mono.Addins.Description/ExtensionPoint.cs,
	  Mono.Addins.Database/AddinUpdateData.cs,
	  Mono.Addins.Database/AddinDatabase.cs: Use ISO-1 compliant c# only.
	* Mono.Addins.Description/Condition.cs,
	  Mono.Addins.Description/ConditionCollection.cs: Removed unused
	  files.

2007-04-04  Lluis Sanchez Gual <lluis@novell.com> 

	* Mono.Addins.csproj: Added msbuild project files. Patch by Matthijs
	  ter Woord.

2007-03-30  Lluis Sanchez Gual <lluis@novell.com> 

	* Mono.Addins/Addin.cs: Added support for global add-in names.
	* Mono.Addins/ExtensionContext.cs: Make sure extensions of recently
	  installed add-ins are properly loaded. Don't call OnAddinLoaded on
	  nodes until all nodes of the extension point have been loaded,
	  since OnAddinLoaded implementations may try to access to children
	  which have not yet been loaded.
	* Mono.Addins/ExtensionNode.cs: Added some null checks.
	* Mono.Addins/ExtensionTree.cs: Fixed order when the insertafer
	  attribute is specified.
	* Mono.Addins/TreeNode.cs: Added method for getting an extension point
	  from a path.
	* Mono.Addins/AddinRegistry.cs: Added new env var for specifying the
	  global add-in registry.
	* Mono.Addins.Database/AddinScanFolderInfo.cs: Only include add-in
	  files in the list of missing files.
	* Mono.Addins.Database/AddinDatabase.cs: Properly remove add-in
	  manifests from add-in folders that have been deleted.
	* Mono.Addins.Database/AddinScanner.cs: Moved code that removes
	  manifests from deleted add-ins to a new method, which is called
	  from AddinDatabase as well.

2007-03-28  Lluis Sanchez Gual <lluis@novell.com> 

	* Mono.Addins.mdp: Generate a winexe, to avoid showing a console in
	  windows.
	* Mono.Addins/Addin.cs: Null check.
	* Mono.Addins/AddinSessionService.cs, Mono.Addins/AddinManager.cs,
	  Mono.Addins.Database/AddinScanner.cs: Use Assembly.CodeBase, since
	  Assembly.Location will return the wrong value when the assembly is
	  loaded using shadow copy.
	* Mono.Addins/AddinRegistry.cs, Mono.Addins.Database/SetupProcess.cs:
	  Windows portability fixes.
	* Mono.Addins.Description/ExtensionNodeSet.cs: Workaround for mono bug.
	* Mono.Addins.Database/Util.cs, Mono.Addins.Database/FileDatabase.cs:
	  Use a custom method for getting a string hash, to make sure we get
	  consistent results.

2007-03-23  Lluis Sanchez Gual <lluis@novell.com> 

	* Mono.Addins.mdp: Updated.
	* Mono.Addins/AddinRegistry.cs: Create the add-ins folder for host
	  references when it doesn't exist.

